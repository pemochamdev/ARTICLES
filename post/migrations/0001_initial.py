# Generated by Django 4.2.5 on 2023-09-25 03:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Tag')),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(unique=True)),
                ('status', models.CharField(choices=[('draf', 'Draft'), ('published', 'Published'), ('rejeted', 'Rejeted')], max_length=10, verbose_name='Status')),
                ('publication_date', models.DateTimeField(auto_now_add=True, verbose_name='Published')),
                ('picture', models.ImageField(upload_to='uploads/%Y/%m/%d', verbose_name='Picture')),
                ('content', models.TextField(verbose_name='Content')),
                ('author', models.CharField(default='Anonymous', max_length=30, verbose_name='Create by')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_category', to='post.category', verbose_name='Category')),
                ('tags', models.ManyToManyField(to='post.tags')),
            ],
        ),
    ]
